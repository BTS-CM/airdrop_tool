{
    "calcs": {
        "forward": {
            "name": "Forward chunks",
            "desc": "Split hash into ticket numbers."
        },
        "reverse": {
            "name": "Reverse chunks",
            "desc": "Reverse hash then split into ticket numbers."
        },
        "pi": {
            "name": "PI",
            "desc": "Split hash, do some math then multiply by PI for ticket numbers."
        },
        "reverse_pi": {
            "name": "Reverse PI",
            "desc": "Split hash, reverse hash chunks, do math, multiply by PI, output tickets."
        },
        "cubed": {
            "name": "Cubed",
            "desc": "Split hash into 3 digit chunks, cube each chunk, output tickets."
        },
        "bouncing_ball": {
            "name": "Bouncing ball",
            "desc": "path of ball bouncing in matrix -> pick tickets along path"
        },
        "alien_blood": {
            "name": "Alien blood",
            "desc": "Picks alien blood splatter spots; it burns directly down through the hull"
        },
        "avg_point_lines": {
            "name": "Average point lines",
            "desc": "Calculate the avg x/y/z coordinates -> draw lines to this from each vector => reward those on line"
        },
        "freebie": {
            "name": "Freebie",
            "desc": "Each ticket holding account gets 1 winning ticket"
        },
        "forever_freebie": {
            "name": "Forever freebie",
            "desc": "Each account holding a ticket with a forever duration and qualifying quantity gets 1 winning ticket"
        },
        "ltm_freebie": {
            "name": "Lifetime membership freebie",
            "desc": "Provide a free ticket to ticker holders who have a lifetime membership."
        },
        "barrel_of_fish": {
            "name": "Barrel of fish",
            "desc": "Pick tickets from a barrel of fish",
            "projectile": {
                "distance": "How far should the projectile travel in the barrel of fish",
                "beam": "The projectile should pass directly from point A to point B unimpeded.",
                "slow": "The projectiles will slow to a halt quickly in the water."
            },
            "splinter": {
                "fragmentation": "Will the projectile splinter on impact?",
                "yes": "Yes, it should splinter once on impact.",
                "no": "No, it's a solid single projectile."
            }
        },
        "asset_freebie": {
            "label": "Lookup an asset",
            "name": "Asset freebie",
            "desc": "Provide a free ticket to ticker holders who have a certain asset.",
            "notFound": "Asset not found",
            "placeholder": "Choose the asset you want to assign tickets to",
            "qtyType": "How many tickets do you want to assign the asset holders?",
            "one": "One ticket per asset holder",
            "balance": "The same number of tickets as the asset holder's balance"
        }
    },
    "calculatingTitle": "Performing airdrop calculations, please wait!",
    "completed": {
        "title": "Successfully completed airdrop calculations!",
        "anotherBtn": "Calculate another airdrop?",
        "airdropBtn": "View generated airdrop",
        "generatedBtn": "View all generated airdrops"
    },
    "title": "Calculate a provably fair airdrop distribution for which blockchain?",
    "radioLabel": "Select the target blockchain",
    "radioDesc": "Graphene based blockchains only",
    "hash": {
        "title": "What kind of blockhash do you want to use for initial provably random input?",
        "radioLabel": "Select an initial hash type",
        "radioDesc": "Original, or securely hashed?",
        "plain": "Plain witness signature string",
        "witSig": "hash of witness signature"
    },
    "ticket": {
        "title": "Winning ticket options",
        "radioLabel": "Should winning tickets be deduplicated?",
        "radioDesc": "I.e. can a ticket win more than once? Yes or no?",
        "yes": "Yes",
        "no": "No",
        "winLabel": "Should winning tickets always be chosen?",
        "winDesc": "E.g. If 600 tickets exist, convert #1000 into #400. (drawn - last)"
    },
    "blockNum": {
        "title": "Enter the block number you wish to use for airdrop purposes",
        "label": "Block number",
        "desc": "The chosen block number will be used to generate the initial hash for the airdrop calculation, influencing the outcome of the airdrop."
    },
    "fetchTickets": "You must fetch the ticket data for this blockchain.",
    "distro": {
        "title": "Select your prefered methods for generating provably fair airdrop distributions",
        "th1": "Type",
        "th2": "Description"
    },
    "proceed": {
        "title": "Proceed with airdrop calculation",
        "desc": "Your calculated airdrop vector will be made available in the airdrop page once completed.",
        "btn": "Perform airdrop calculation"
    }
}